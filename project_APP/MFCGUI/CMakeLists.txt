# 版本限定
cmake_minimum_required(VERSION 2.8.7)
# 项目名称(sln)
project(CMakeMFC)

# 设置生成路径
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
# 设置编译器选项 不显示所有警告
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W0")
# 定义头文件的路径变量
SET(INCLUDE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/SRC
    ${CMAKE_CURRENT_SOURCE_DIR}/res
    ${CMAKE_CURRENT_SOURCE_DIR}/vc12
) 
MESSAGE(STATUS "Include Path, ${INCLUDE_PATH}")
# 定义库文件路径
SET(LIB_PATH ${INCLUDE_PATH})
MESSAGE(STATUS "Libs Path, ${LIB_PATH}")
# 定义源文件路径变量
SET(SOURCE_PATH ${INCLUDE_PATH}) 
MESSAGE(STATUS "Source Path , ${SOURCE_PATH}") 
# 包含头文件搜索路径
INCLUDE_DIRECTORIES(${INCLUDE_PATH}) 
# 包含库搜索路径
LINK_DIRECTORIES(${LIB_PATH})

# 添加源文件路径下所有源文件存放到变量中(*.c && *.cpp)
#AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/SRC/res DIR_SRCS)
AUX_SOURCE_DIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/SRC DIR_SRCS)
SET(DIR_SRCS ${DIR_SRCS} res/MFCGUI.rc)
MESSAGE(STATUS "DIR_SRCS , ${DIR_SRCS}") 


# MFC
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS") 
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /ENTRY:\"wWinMainCRTStartup\"")
#设置字符集  
add_definitions(-DUNICODE -D_UNICODE)  
#设置CMAKE_MFC_FLAG为2,0表示使用标准的MFC，1表示静态MFC,2表示共享  
SET(CMAKE_MFC_FLAG 1)
#设置预编译项  
#add_definitions( -DQLEMR_CFG_DLL )  
#共享DLL中使用 MFC  
#ADD_DEFINITIONS(-D_AFXDLL)  

# 设置生成可执行文件的名称
SET(EXECUTABLE_FILE_NAME TestMFC)

# 生成可执行文件
ADD_EXECUTABLE(${EXECUTABLE_FILE_NAME} ${DIR_SRCS})
#TARGET_LINK_LIBRARIES(${EXECUTABLE_FILE_NAME} )






